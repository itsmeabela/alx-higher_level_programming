Test cases for '101-lazy_matrix_mul.txt'
========================================

Import module
>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

Cases to be evaluated:
----------------------

Case #1: test zero arguments
>>> lazy_matrix_mul()
Traceback (most recent call last):
...
TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

Case #2: test None argument.
>>> lazy_matrix_mul(None, [[1, 2]])
Traceback (most recent call last):
...
TypeError: Object arrays are not currently supported

Case #3: test None argument.
>>> lazy_matrix_mul([[1, 2]], None)
Traceback (most recent call last):
...
TypeError: Object arrays are not currently supported

Case #4: test 'm_a' as an empty list
>>> lazy_matrix_mul([], [[1, 2]])
Traceback (most recent call last):
...
ValueError: shapes (0,) and (1,2) not aligned: 0 (dim 0) != 1 (dim 0)

Case #4: test 'm_b' as an empty list
>>> lazy_matrix_mul([[1, 2]], [])
Traceback (most recent call last):
...
ValueError: shapes (1,2) and (0,) not aligned: 2 (dim 1) != 0 (dim 0)

Case #5: test 'm_a' as an int list
>>> lazy_matrix_mul([1, 2], [[1, 2]])
Traceback (most recent call last):
...
ValueError: shapes (2,) and (1,2) not aligned: 2 (dim 0) != 1 (dim 0)

Case #6: test 'm_b' as an int list
>>> lazy_matrix_mul([[1, 2]], [1, 2])
array([5])

Case #7: test 'm_a' having strings within
>>> lazy_matrix_mul([[1, "2"]], [[3, 4], [5, 6]])
Traceback (most recent call last):
...
TypeError: invalid data type for einsum

Case #8: test 'm_b' having strings within
>>> lazy_matrix_mul([[1, 2]], [[3, "4"], [5, 6]])
Traceback (most recent call last):
...
TypeError: invalid data type for einsum

Case #9: test different list's size to 'm_a'
>>> lazy_matrix_mul([[1, 2], [1, 2, 3]], [[3, 4], [5, 6]])
Traceback (most recent call last):
...
ValueError: setting an array element with a sequence.

Case #10: test different list's size to 'm_b'
>>> lazy_matrix_mul([[1, 2], [1, 3]], [[3, 4, 5], [5, 6]])
Traceback (most recent call last):
...
ValueError: setting an array element with a sequence.

Case #11: test differents dimension between matrices
>>> lazy_matrix_mul([[1, 2], [1, 3]], [[3, 4], [5, 6], [7, 8]])
Traceback (most recent call last):
...
ValueError: shapes (2,2) and (3,2) not aligned: 2 (dim 1) != 3 (dim 0)

Case #12: test infinite numbers
>>> lazy_matrix_mul([[1, 2]], [[3, 4], [float("inf"), float("inf")]])
array([[inf, inf]])

Case #13: test 0 numbers
>>> lazy_matrix_mul([[0, 0]], [[0, 0], [0, 0]])
array([[0, 0]])
